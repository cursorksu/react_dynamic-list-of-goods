{"version":3,"sources":["components/GoodItem/GoodItem.tsx","components/GoodsList/GoodList.tsx","utils/api.ts","conatants/const.tsx","index.tsx","App.tsx"],"names":["GoodItem","good","color","name","className","style","GoodList","props","goods","map","key","id","downloadGoodsList","a","fetch","then","response","json","ReactDOM","render","useState","setGoods","isLoading","setIsLoading","handleFilter","event","filterName","currentTarget","dataset","list","sort","b","localeCompare","slice","filter","item1","setTimeout","data-name","type","onClick","document","getElementById"],"mappings":"wNAMaA,G,MAAsB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC5BC,EAAgBD,EAAhBC,MAAOC,EAASF,EAATE,KAEf,OACE,wBACEC,UAAU,kBACVC,MAAO,CAAEH,UAERC,KCPMG,EAAsB,SAACC,GAAD,OACjC,wBAAIH,UAAU,cACXG,EAAMC,MAAMC,KAAI,SAAAR,GAAI,OACnB,kBAAC,EAAD,CACES,IAAKT,EAAKU,GACVV,KAAMA,S,+BCVDW,EAAiB,uCAAG,sBAAAC,EAAA,+EACxBC,MCHgB,yEDIpBC,MAAK,SAAAC,GACJ,OAAOA,EAASC,WAHW,2CAAH,qDEE9BC,IAASC,OACP,mBCCqB,WAAO,IAAD,EACDC,mBAAiB,IADhB,mBACpBZ,EADoB,KACba,EADa,OAEOD,oBAAS,GAFhB,mBAEpBE,EAFoB,KAETC,EAFS,KAIrBC,EAAe,SAACC,GACpBF,GAAa,GACb,IAAMG,EAAaD,EAAME,cAAcC,QAAQzB,KAE/CS,IACGG,MAAK,SAAAc,GACe,gBAAfH,GACFG,EAAKC,MAAK,SAACjB,EAASkB,GAAV,OAAsBlB,EAAEV,KAAK6B,cAAcD,EAAE5B,SACvDkB,EAASQ,EAAKI,MAAM,EAAG,KAEvBZ,EADwB,YAAfK,EACAG,EAAKK,QAAO,SAACC,GAAD,MAAiC,QAAhBA,EAAMjC,SAEnC2B,MAEVd,MAAK,SAAAC,GAMN,OAJAoB,YAAW,WACTb,GAAa,KACZ,KAEIP,MAIb,OACE,yBAAKZ,UAAU,yBACb,wBAAIA,UAAU,SAAd,yBAEA,4BACEiC,YAAU,MACVC,KAAK,SACLC,QAASf,EACTpB,UAAU,0BAJZ,qBAQA,4BACEiC,YAAU,cACVC,KAAK,SACLC,QAASf,EACTpB,UAAU,0BAJZ,mBAQA,4BACEiC,YAAU,UACVC,KAAK,SACLC,QAASf,EACTpB,UAAU,0BAJZ,qBAQA,yBAAKA,UAAU,WACZkB,EAAY,yBAAKlB,UAAU,WAAc,kBAAC,EAAD,CAAUI,MAAOA,QD1DjE,MACAgC,SAASC,eAAe,U","file":"static/js/main.7c9ad143.chunk.js","sourcesContent":["import React, { FC } from 'react';\n\ninterface Props {\n  good: Good;\n}\n\nexport const GoodItem: FC<Props> = ({ good }) => {\n  const { color, name } = good;\n\n  return (\n    <li\n      className=\"list-group-item\"\n      style={{ color }}\n    >\n      {name}\n    </li>\n  );\n};\n","import React, { FC } from 'react';\nimport { GoodItem } from '../GoodItem/GoodItem';\n\ninterface Props {\n  goods: Good[];\n}\n\nexport const GoodList: FC<Props> = (props) => (\n  <ul className=\"list-group\">\n    {props.goods.map(good => (\n      <GoodItem\n        key={good.id}\n        good={good}\n      />\n    ))}\n  </ul>\n);\n","import { GOODS_URL } from '../conatants/const';\n\nexport const downloadGoodsList = async (): Promise<Good[]> => {\n  return fetch(GOODS_URL)\n    .then(response => {\n      return response.json();\n    });\n};\n","export const GOODS_URL = 'https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n","import React, { useState, FC } from 'react';\nimport 'bootswatch/dist/lux/bootstrap.min.css';\nimport { GoodList } from './components/GoodsList/GoodList';\nimport './App.css';\nimport { downloadGoodsList } from './utils/api';\n\nexport const App: FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleFilter = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setIsLoading(true);\n    const filterName = event.currentTarget.dataset.name;\n\n    downloadGoodsList()\n      .then(list => {\n        if (filterName === 'sortAndFive') {\n          list.sort((a: Good, b: Good) => a.name.localeCompare(b.name));\n          setGoods(list.slice(0, 5));\n        } else if (filterName === 'redOnly') {\n          setGoods(list.filter((item1: Good) => item1.color === 'red'));\n        } else {\n          setGoods(list);\n        }\n      }).then(response => {\n      // setTimeout for demo only\n        setTimeout(() => {\n          setIsLoading(false);\n        }, 500);\n\n        return response;\n      });\n  };\n\n  return (\n    <div className=\"container text-center\">\n      <h1 className=\"title\">Dynamic list of Goods</h1>\n\n      <button\n        data-name=\"all\"\n        type=\"button\"\n        onClick={handleFilter}\n        className=\"btn btn-primary btn-sm\"\n      >\n        Load all products\n      </button>\n      <button\n        data-name=\"sortAndFive\"\n        type=\"button\"\n        onClick={handleFilter}\n        className=\"btn btn-primary btn-sm\"\n      >\n        Load 5 products\n      </button>\n      <button\n        data-name=\"redOnly\"\n        type=\"button\"\n        onClick={handleFilter}\n        className=\"btn btn-primary btn-sm\"\n      >\n        Load Red products\n      </button>\n      <div className=\"content\">\n        {isLoading ? <div className=\"loader\" /> : <GoodList goods={goods} />}\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}