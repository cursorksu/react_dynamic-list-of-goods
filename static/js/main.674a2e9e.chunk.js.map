{"version":3,"sources":["components/GoodItem/GoodItem.tsx","components/GoodsList/GoodList.tsx","utils/api.ts","constants/index.ts","index.tsx","App.tsx"],"names":["GoodItem","good","color","name","className","style","GoodList","goods","map","key","id","downloadGoodsList","a","fetch","then","response","json","ReactDOM","render","useState","setGoods","isLoading","setIsLoading","handleLoad","filterName","list","sort","b","localeCompare","slice","filter","item1","setTimeout","type","onClick","document","getElementById"],"mappings":"wNAMaA,G,MAAsB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC5BC,EAAgBD,EAAhBC,MAAOC,EAASF,EAATE,KAEf,OACE,wBACEC,UAAU,kBACVC,MAAO,CAAEH,UAERC,KCPMG,EAAsB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACjC,wBAAIH,UAAU,cACXG,EAAMC,KAAI,SAAAP,GAAI,OACb,kBAAC,EAAD,CACEQ,IAAKR,EAAKS,GACVT,KAAMA,S,+BCVDU,EAAiB,uCAAG,sBAAAC,EAAA,+EACxBC,MCHgB,yEDIpBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAFE,2CAAH,qDEE9BC,IAASC,OACP,mBCCqB,WAAO,IAAD,EACDC,mBAAiB,IADhB,mBACpBZ,EADoB,KACba,EADa,OAEOD,oBAAS,GAFhB,mBAEpBE,EAFoB,KAETC,EAFS,KAIrBC,EAAa,SAACC,GAClBF,GAAa,GAEbX,IACGG,MAAK,SAAAW,GACJ,OAAQD,GACN,IAAK,cACHJ,EAASK,EAAKC,MAAK,SAACd,EAASe,GAAV,OAAsBf,EAAET,KAAKyB,cAAcD,EAAExB,SAC7D0B,MAAM,EAAG,IACZ,MAGF,IAAK,UACHT,EAASK,EAAKK,QAAO,SAACC,GAAD,MAAiC,QAAhBA,EAAM7B,UAC5C,MAGF,QACEkB,EAASK,OAGZX,MAAK,SAAAC,GAMN,OAJAiB,YAAW,WACTV,GAAa,KACZ,KAEIP,MAIb,OACE,yBAAKX,UAAU,yBACb,wBAAIA,UAAU,SAAd,yBAEA,4BACE6B,KAAK,SACLC,QAAS,kBAAMX,EAAW,QAC1BnB,UAAU,0BAHZ,qBAOA,4BACE6B,KAAK,SACLC,QAAS,kBAAMX,EAAW,gBAC1BnB,UAAU,0BAHZ,mBAOA,4BACE6B,KAAK,SACLC,QAAS,kBAAMX,EAAW,YAC1BnB,UAAU,0BAHZ,qBAOA,yBAAKA,UAAU,WACZiB,EAAY,yBAAKjB,UAAU,WAAc,kBAAC,EAAD,CAAUG,MAAOA,QD9DjE,MACA4B,SAASC,eAAe,U","file":"static/js/main.674a2e9e.chunk.js","sourcesContent":["import React, { FC } from 'react';\n\ninterface Props {\n  good: Good;\n}\n\nexport const GoodItem: FC<Props> = ({ good }) => {\n  const { color, name } = good;\n\n  return (\n    <li\n      className=\"list-group-item\"\n      style={{ color }}\n    >\n      {name}\n    </li>\n  );\n};\n","import React, { FC } from 'react';\nimport { GoodItem } from '../GoodItem/GoodItem';\n\ninterface Props {\n  goods: Good[];\n}\n\nexport const GoodList: FC<Props> = ({ goods }) => (\n  <ul className=\"list-group\">\n    {goods.map(good => (\n      <GoodItem\n        key={good.id}\n        good={good}\n      />\n    ))}\n  </ul>\n);\n","import { GOODS_URL } from '../constants';\n\nexport const downloadGoodsList = async (): Promise<Good[]> => {\n  return fetch(GOODS_URL)\n    .then(response => response.json());\n};\n","export const GOODS_URL = 'https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n","import React, { useState, FC } from 'react';\nimport 'bootswatch/dist/lux/bootstrap.min.css';\nimport { GoodList } from './components/GoodsList/GoodList';\nimport './App.css';\nimport { downloadGoodsList } from './utils/api';\n\nexport const App: FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleLoad = (filterName: string) => {\n    setIsLoading(true);\n\n    downloadGoodsList()\n      .then(list => {\n        switch (filterName) {\n          case 'sortAndFive': {\n            setGoods(list.sort((a: Good, b: Good) => a.name.localeCompare(b.name))\n              .slice(0, 5));\n            break;\n          }\n\n          case 'redOnly': {\n            setGoods(list.filter((item1: Good) => item1.color === 'red'));\n            break;\n          }\n\n          default: {\n            setGoods(list);\n          }\n        }\n      }).then(response => {\n        // setTimeout for demo only\n        setTimeout(() => {\n          setIsLoading(false);\n        }, 500);\n\n        return response;\n      });\n  };\n\n  return (\n    <div className=\"container text-center\">\n      <h1 className=\"title\">Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        onClick={() => handleLoad('all')}\n        className=\"btn btn-primary btn-sm\"\n      >\n        Load all products\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => handleLoad('sortAndFive')}\n        className=\"btn btn-primary btn-sm\"\n      >\n        Load 5 products\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => handleLoad('redOnly')}\n        className=\"btn btn-primary btn-sm\"\n      >\n        Load Red products\n      </button>\n      <div className=\"content\">\n        {isLoading ? <div className=\"loader\" /> : <GoodList goods={goods} />}\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}